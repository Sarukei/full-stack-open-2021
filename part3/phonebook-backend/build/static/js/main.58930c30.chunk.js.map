{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/phonebook.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","onChange","e","setSearchFilter","target","value","searchFilter","PersonForm","onSubmit","handleNewPerson","handleNewName","newName","handleNewNumber","newNumber","type","Person","person","deleteContact","name","number","onClick","Persons","personsToShow","length","map","i","id","axios","defaults","baseURL","contactToAdd","post","then","response","data","get","delete","newContact","put","Notification","message","className","error","msg","App","useState","persons","setPersons","setNewName","setNewNumber","notificationMessage","setNotificationMessage","filter","toLowerCase","includes","useEffect","phonebookService","contacts","nameValue","numberValue","preventDefault","existingPerson","find","updatePhoneNumber","window","confirm","returnedPerson","setTimeout","catch","err","contact","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58930c30.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = (props) => (\n  <div>\n    filter shown with{\" \"}\n    <input\n      onChange={(e) => props.setSearchFilter(e.target.value)}\n      value={props.searchFilter || \"\"}\n    />\n  </div>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.handleNewPerson}>\n      <div>\n        name: <input onChange={props.handleNewName} value={props.newName} />\n      </div>\n\n      <div>\n        number:{\" \"}\n        <input onChange={props.handleNewNumber} value={props.newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = ({ person, deleteContact }) => (\n  <p>\n    {person.name} {person.number}{\" \"}\n    <button onClick={deleteContact}>delete</button>\n  </p>\n);\n\nconst Persons = ({ personsToShow, deleteContact }) => {\n  return personsToShow.length\n    ? personsToShow.map((person, i) => (\n        <Person\n          key={person.name}\n          person={person}\n          deleteContact={() => deleteContact(person.id)}\n        />\n      ))\n    : \"...\";\n};\n\nexport default Persons;\n","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\naxios.defaults.baseURL = baseUrl;\n\nconst addContact = (contactToAdd) => {\n  const request = axios.post(\"/\", contactToAdd);\n  return request.then((response) => response.data);\n};\n\nconst deleteContact = (id) => {\n  const request = axios.delete(`/${id}`);\n\n  return request.then((response) => response.data);\n};\n\nconst getAllContacts = () => {\n  const request = axios.get(\"/\");\n  return request.then((response) => response.data);\n};\n\nconst updateContact = (id, newContact) => {\n  const request = axios.put(`/${id}`, newContact);\n  return request.then((response) => response.data);\n};\n\nexport default { addContact, getAllContacts, deleteContact, updateContact };\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (!message) return null;\n  return (\n    <div\n      className={`notification ${message.error ? \"notification--error\" : \"\"}`}\n    >\n      {message.msg}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport phonebookService from \"./services/phonebook\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchFilter, setSearchFilter] = useState(null);\n  const [notificationMessage, setNotificationMessage] = useState(null);\n\n  const personsToShow = !searchFilter\n    ? persons\n    : persons.filter((person) =>\n        person.name.toLowerCase().includes(searchFilter.toLowerCase())\n      );\n\n  useEffect(() => {\n    phonebookService.getAllContacts().then((contacts) => setPersons(contacts));\n  }, []);\n\n  const personAlreadyExists = (name) =>\n    persons.find((person) => person.name === name);\n\n  const handleNewPerson = (e) => {\n    e.preventDefault();\n\n    // Check if person already exists\n    const existingPerson = personAlreadyExists(newName);\n    const updatePhoneNumber =\n      existingPerson &&\n      window.confirm(\n        `${existingPerson.name} is already added to phonebook, replace the old number with a new one?`\n      );\n    if (existingPerson) {\n      if (updatePhoneNumber) {\n        phonebookService\n          .updateContact(existingPerson.id, {\n            ...existingPerson,\n            number: newNumber,\n          })\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== existingPerson.id ? person : returnedPerson\n              )\n            );\n            setNotificationMessage({ msg: `Updated ${existingPerson.name}` });\n\n            setTimeout(() => setNotificationMessage(null), 5000);\n          })\n          .catch((err) => {\n            setNotificationMessage({\n              msg: `Information of ${existingPerson.name} has already been removed from the`,\n              error: true,\n            });\n\n            setTimeout(() => setNotificationMessage(null), 5000);\n\n            setPersons(\n              persons.filter((person) => person.id !== existingPerson.id)\n            );\n          });\n      }\n      setNewName(\"\");\n      setNewNumber(\"\");\n\n      return;\n      // return alert(`${newName} already added to phonebook`);\n    }\n    // Add the new name to the phone list\n\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n\n    phonebookService.addContact(newPerson).then((contact) => {\n      setPersons([...persons, contact]);\n\n      setNotificationMessage({ msg: `Added ${contact.name}` });\n\n      setTimeout(() => setNotificationMessage(null), 5000);\n    });\n    // Clear the new name value from the input\n    setNewName(\"\");\n    // Clear the number value from the input\n    setNewNumber(\"\");\n  };\n\n  const handleNewName = (e) => {\n    const nameValue = e.target.value;\n\n    setNewName(nameValue);\n  };\n\n  const handleNewNumber = (e) => {\n    const numberValue = e.target.value;\n    setNewNumber(numberValue);\n  };\n\n  const deleteContact = (id) => {\n    const contact = persons.find((person) => person.id === id);\n\n    console.log(contact);\n    if (!window.confirm(`Delete ${contact.name}?`)) return;\n\n    phonebookService.deleteContact(id).then(() => {\n      setPersons(persons.filter((person) => person.id !== id));\n    });\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      <Filter setSearchFilter={setSearchFilter} searchFilter={searchFilter} />\n\n      <h2>Add a new</h2>\n      <PersonForm\n        handleNewName={handleNewName}\n        handleNewNumber={handleNewNumber}\n        handleNewPerson={handleNewPerson}\n        newName={newName}\n        newNumber={newNumber}\n      />\n\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} deleteContact={deleteContact} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}